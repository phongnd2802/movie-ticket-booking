server:
  address: 0.0.0.0
  port: 8080
  tomcat:
    threads:
      max: 200
  servlet:
    context-path: /api/v1


spring:
  application:
    name: movie-ticket-booking
  datasource:
    hikari:
      maximum-pool-size: 20 # Số lượng tối đa kết nối
      minimum-idle: 5 # Số lượng kết nối tối thiểu trong pool
    url: jdbc:postgresql://localhost:5555/movie-ticket-booking
    username: postgres
    password: secret
    driver-class-name: org.postgresql.Driver
    type: com.zaxxer.hikari.HikariDataSource
  threads:
    virtual:
      enabled: true


  jpa:
    database: postgresql
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  jackson:
    serialization:
      indent-output: true

  # Redis Connection settings
  data:
    redis:
      host: 127.0.0.1
      port: 6666
      lettuce:
        pool: #Connection pool settings
          max-active: 8 #Maximum number of active connections in the pool (uses -1 for no limit)
          max-idle: 8 #Maxmimum number of idle connections in the pool
          min-idle: 0 # Minimum number of idle connections in the pool
          max-wait: -1ms #Maximum wait time to get a connection from the pool (-1 for no limit)
      connect-timeout: 30000 #Connection timeout (in milliseconds)

  mail:
    port: 587
    host: smtp.gmail.com
    password: aymqvnmmhkjbuytz
    username: duyphong02802@gmail.com
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

  kafka:
    bootstrap-servers: localhost:9193
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 0
      batch-size: 16384
      buffer-memory: 33554422
    consumer:
      group-id: otp-group-id
      auto-offset-reset: earliest
      enable-auto-commit: false
      auto-commit-interval: 100
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      missing-topics-fatal: false
      ack-mode: manual_immediate
management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - '*'


minio:
  endpoint: http://127.0.0.1:9000
  access-key: I95Zb3AlmeZ7eCrAZDRO
  secret-key: q4jEnloTxNB4DCHKyHJstQu42s6NQEByShRgg9Ja

jwt:
  secret: A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9T0U1V2W3X4Y5Z6A7B8C9D0E1F2
  access:
    expiration: 900000
  refresh:
    expiration: 604800000


CLOUDINARY_URL: cloudinary://886288871363321:DW04Qizn2aaQmHjwT_ypIfkHRfk@dwwrqkjnu