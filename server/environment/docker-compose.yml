version: '3.9'

services:
  postgres:
    container_name: postgres_container
    image: postgres:15-alpine
    ports:
      - "5555:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: movie-ticket-booking
      PGDATA: /data/postgres
    volumes:
      - ./postgres:/data/postgres
    networks:
      - movie-ticket-network

  redis:
    container_name: redis_container
    image: redis:7-alpine
    ports:
      - "6666:6379"
    environment:
      REDIS_PASSWORD: secret
      REDIS_PORT: 6379
    networks:
      - movie-ticket-network

  minio:
    container_name: minio_container
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./minio:/data
    command: server /data --console-address ":9001"
    networks:
      - movie-ticket-network

  mc-init:
    container_name: mc_init
    image: minio/mc
    entrypoint: |
      /bin/bash -c "
      sleep 5;
      /usr/bin/mc config --quiet host add dmlminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb --quiet dmlminio/movies;
      "
    depends_on:
      - minio
    networks:
      - movie-ticket-network

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.5.0
    ports:
      - "9192:9092"
      - "9193:9094"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://127.0.0.1:9193
      - KAFKA_BROKER_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=LelM2dIFQkiUFvXCEcqRWA
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_LOG_RETENTION_MS=604800000
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms256M
      # - KAFKA_CFG_NUM_PARTITIONS=2
    volumes:
      - ./kafka:/bitnami/kafka
    networks:
      - movie-ticket-network
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 5s
      timeout: 10s
      retries: 10

  kafka_ui:
    container_name: kafka_ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8888:8080"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_CLUSTERS_0_NAME=env-dev
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - DYNAMIC_CONFIG_ENABLE=true
    networks:
      - movie-ticket-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_container
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - "9090:9090"
    networks:
      - movie-ticket-network
networks:
  movie-ticket-network: